[gd_scene load_steps=18 format=2]

[ext_resource path="res://Sprites/magic.png" type="Texture" id=1]
[ext_resource path="res://Prefabs/TargetRune.cs" type="Script" id=2]

[sub_resource type="VisualShaderNodeVectorDecompose" id=1]

[sub_resource type="VisualShaderNodeScalarOp" id=2]

[sub_resource type="VisualShaderNodeVectorCompose" id=3]

[sub_resource type="VisualShaderNodeScalarOp" id=4]
default_input_values = [ 0, 0.0, 1, 0.25 ]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=5]
input_name = "time"

[sub_resource type="VisualShaderNodeVectorOp" id=6]

[sub_resource type="VisualShaderNodeTexture" id=7]
source = 5

[sub_resource type="VisualShaderNodeInput" id=8]
input_name = "uv"

[sub_resource type="VisualShaderNodeInput" id=9]
input_name = "texture"

[sub_resource type="VisualShaderNodeInput" id=10]
input_name = "uv"

[sub_resource type="OpenSimplexNoise" id=11]

[sub_resource type="NoiseTexture" id=12]
seamless = true
noise = SubResource( 11 )

[sub_resource type="VisualShaderNodeTexture" id=13]
texture = SubResource( 12 )

[sub_resource type="VisualShader" id=14]
code = "shader_type canvas_item;
uniform sampler2D tex_frg_9;



void vertex() {
// Output:0

}

void fragment() {
// Input:14
	float n_out14p0 = TIME;

// ScalarOp:13
	float n_in13p1 = 0.25000;
	float n_out13p0 = n_out14p0 * n_in13p1;

// Input:8
	vec3 n_out8p0 = vec3(UV, 0.0);

// VectorDecompose:10
	float n_out10p0 = n_out8p0.x;
	float n_out10p1 = n_out8p0.y;
	float n_out10p2 = n_out8p0.z;

// ScalarOp:11
	float n_out11p0 = n_out13p0 + n_out10p0;

// VectorCompose:12
	vec3 n_out12p0 = vec3(n_out11p0, n_out10p1, n_out10p2);

// Texture:9
	vec4 tex_frg_9_read = texture(tex_frg_9, n_out12p0.xy);
	vec3 n_out9p0 = tex_frg_9_read.rgb;
	float n_out9p1 = tex_frg_9_read.a;

// Input:4
	vec3 n_out4p0 = vec3(UV, 0.0);

// Input:5

// Texture:3
	vec3 n_out3p0;
	float n_out3p1;
	{
		vec4 TEXTURE_tex_read = texture(TEXTURE, n_out4p0.xy);
		n_out3p0 = TEXTURE_tex_read.rgb;
		n_out3p1 = TEXTURE_tex_read.a;
	}

// VectorOp:2
	vec3 n_out2p0 = n_out9p0 + n_out3p0;

// Output:0
	COLOR.rgb = n_out2p0;
	COLOR.a = n_out3p1;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -639.614, -322.5 )
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 800, 140 )
nodes/fragment/2/node = SubResource( 6 )
nodes/fragment/2/position = Vector2( 580, 40 )
nodes/fragment/3/node = SubResource( 7 )
nodes/fragment/3/position = Vector2( 320, 100 )
nodes/fragment/4/node = SubResource( 8 )
nodes/fragment/4/position = Vector2( 100, 100 )
nodes/fragment/5/node = SubResource( 9 )
nodes/fragment/5/position = Vector2( 100, 180 )
nodes/fragment/8/node = SubResource( 10 )
nodes/fragment/8/position = Vector2( -520, 0 )
nodes/fragment/9/node = SubResource( 13 )
nodes/fragment/9/position = Vector2( 300, -160 )
nodes/fragment/10/node = SubResource( 1 )
nodes/fragment/10/position = Vector2( -340, 0 )
nodes/fragment/11/node = SubResource( 2 )
nodes/fragment/11/position = Vector2( -120, -140 )
nodes/fragment/12/node = SubResource( 3 )
nodes/fragment/12/position = Vector2( 80, -40 )
nodes/fragment/13/node = SubResource( 4 )
nodes/fragment/13/position = Vector2( -340, -140 )
nodes/fragment/14/node = SubResource( 5 )
nodes/fragment/14/position = Vector2( -540, -120 )
nodes/fragment/connections = PoolIntArray( 4, 0, 3, 0, 5, 0, 3, 2, 9, 0, 2, 0, 2, 0, 0, 0, 3, 0, 2, 1, 3, 1, 0, 1, 8, 0, 10, 0, 10, 0, 11, 1, 11, 0, 12, 0, 12, 0, 9, 0, 10, 1, 12, 1, 10, 2, 12, 2, 13, 0, 11, 0, 14, 0, 13, 0 )

[sub_resource type="ShaderMaterial" id=15]
shader = SubResource( 14 )

[node name="Rune" type="Sprite"]
material = SubResource( 15 )
position = Vector2( 183.589, 199.422 )
scale = Vector2( 0.05, 0.05 )
texture = ExtResource( 1 )
script = ExtResource( 2 )
